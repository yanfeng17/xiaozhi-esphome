# Xiaozhi Ball v1 â€” hardware pack (ESP32-S3 + GC9A01A round 240x240) v1.08

# --- BUSES / PERIPHERALS ------------------------------------------------------
spi:
  - id: spi_bus
    clk_pin: 14
    mosi_pin: 17

i2s_audio:
  - id: i2s_mic
    i2s_lrclk_pin: GPIO4
    i2s_bclk_pin:  GPIO5
  - id: i2s_audio_bus
    i2s_lrclk_pin: GPIO16
    i2s_bclk_pin:  GPIO15
    # (no MCLK on this board)

# --- AUDIO DEVICES ------------------------------------------------------------
microphone:
  - platform: i2s_audio
    id: box_mic
    i2s_audio_id: i2s_mic
    i2s_din_pin: GPIO6
    adc_type: external
    channel: left
    pdm: false
    sample_rate: 16000
    bits_per_sample: 16bit

speaker:
  - platform: i2s_audio
    id: box_speaker
    i2s_audio_id: i2s_audio_bus
    i2s_dout_pin: GPIO7
    dac_type: external
    channel: stereo
    timeout: never
    buffer_duration: 300ms

  - platform: mixer
    id: mixing_speaker
    output_speaker: box_speaker
    num_channels: 2
    source_speakers:
      - id: announcement_mixer_input
        timeout: never
      - id: media_mixer_input
        timeout: never

  - platform: resampler
    id: media_resampling_input
    output_speaker: media_mixer_input
    sample_rate: 44100
    bits_per_sample: 16
  - platform: resampler
    id: announcement_resampling_input
    output_speaker: announcement_mixer_input    
    sample_rate: 44100
    bits_per_sample: 16

media_player:
  - platform: speaker
    name: none
    id: external_media_player
    announcement_pipeline:
      speaker: announcement_resampling_input
      format: FLAC
      num_channels: 1
      sample_rate: 44100
    media_pipeline:
      speaker: media_resampling_input
      format: FLAC
      num_channels: 2      
      sample_rate: 44100
    buffer_size: 250000

    on_announcement:
      - if:
          condition:
            - microphone.is_capturing:
          then:
            - script.execute: stop_wake_word
            - if:
                condition:
                  - lambda: return id(wake_word_engine_location).state == "In Home Assistant";
                then:
                  - wait_until:
                      condition:
                        - not:
                            voice_assistant.is_running:
      - if:
          condition:
            lambda: 'return id(playing_internal_sound);'
          then:
            - lambda: 'id(playing_internal_sound) = false;'
          else:
            - script.execute: reset_screensaver
            - display.page.show: now_playing_page
            - component.update: main_display

    on_idle:
      - if:
          condition:
            not:
              voice_assistant.is_running:
          then:
            - script.execute: start_wake_word
            - script.execute: set_idle_or_mute_phase
            - script.execute: draw_display

    files:
      - id: timer_finished_sound
        file: https://github.com/RealDeco/xiaozhi-esphome/raw/main/sounds/timer_finished.flac
      - id: wake_word_triggered_sound
        file: https://github.com/RealDeco/xiaozhi-esphome/raw/main/sounds/wake_word_triggered.flac
      - id: ready_sound
        file: ${startup_sound_file}

# --- BACKLIGHT ----------------------------------------------------------------
output:
  - platform: ledc
    id: backlight_output
    pin: GPIO3
    inverted: false

light:
  - platform: monochromatic
    id: Sled
    name: Screen
    icon: "mdi:television"
    entity_category: config
    output: backlight_output
    restore_mode: ALWAYS_ON
    default_transition_length: 250ms

  - platform: esp32_rmt_led_strip
    id: led
    name: none
    disabled_by_default: false
    entity_category: config
    pin: GPIO48
    default_transition_length: 0s
    chipset: WS2812
    num_leds: 1
    rgb_order: grb
    effects:
      - pulse:
          name: "Slow Pulse"
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 50%
          max_brightness: 100%
      - pulse:
          name: "Fast Pulse"
          transition_length: 100ms
          update_interval: 100ms
          min_brightness: 50%
          max_brightness: 100%

# --- BATTERY ADC --------------------------------------------------------------
sensor:
  - platform: adc
    pin: GPIO1
    name: "Battery Voltage"
    id: battery_voltage
    attenuation: 12db
    accuracy_decimals: 2
    update_interval: 10s
    unit_of_measurement: "V"
    icon: mdi:battery-medium
    filters:
      - multiply: 2.0
      - median:
          window_size: 7
          send_every: 7
          send_first_at: 1
      - throttle: 1min
    on_value:
      then:
        - sensor.template.publish:
            id: battery_percentage
            state: !lambda 'return x;'

# --- DISPLAY DRIVER (SPI GC9A01A, 240x240 round) ------------------------------
display:
  - platform: mipi_spi
    id: main_display
    model: GC9A01A
    invert_colors: true
    cs_pin: GPIO13
    dc_pin: GPIO10
    reset_pin: GPIO18
    update_interval: never
    pages: !include ../display_pages.yaml
